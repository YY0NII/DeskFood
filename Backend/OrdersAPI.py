import pyrebase
from fastapi import FastAPI
import sys
sys.path.append('../')

from DeskFoodModels.DeskFoodLib import Order, OrderItem
from typing import List

# Firebase Config - Required info to connect to Firebase
firebaseConfig = {
    'apiKey': "AIzaSyDU0ygdrujK-vkCQb7fRtkv2hGVbxV6A6I",
    'authDomain': "deskfoodapp.firebaseapp.com",
    'databaseURL': "https://deskfoodapp-default-rtdb.firebaseio.com",
    'projectId': "deskfoodapp",
    'storageBucket': "deskfoodapp.appspot.com",
    'messagingSenderId': "42027451518",
    'appId': "1:42027451518:web:69bb99b1689fafe5b2042f",
    'measurementId': "G-9M9EJD2HSH"
}

# Initializes connection to Firebase
firebase = pyrebase.initialize_app(firebaseConfig)

# Initializes connection to Firebase Real Time Database
db = firebase.database()

# Initializes FastAPI module
app = FastAPI()

#Method to convert a list of items into a dictionary
def listToDict(orderItems):
    values = {}
    for i in orderItems:
        values.update({
            "From_kitchen": i.from_kitchen, 
            "Items" : {
                "Name": i.item.name,
                "Price":i.item.price, 
                "Available": i.item.available, 
                "Description": i.item.description
            }
        })

        print(i)
    
    return values

# -----------------------CREATE-----------------------
# CREATES NEW ORDER
@app.post("/CreateNewOrder")
def createOrder(order: Order):
    # Order 
    #   -> Key 
    #       -> OrderItems [
    #           -> OrderItem
    #               -> From Kitchen
    #               -> Item
    #                   -> Name
    #                   -> Price
    #                   -> Available
    #                   -> Description,
    #
    #           -> OrderItem
    #               -> From Kitchen
    #               -> Item
    #                   -> Name
    #                   -> Price
    #                   -> Available
    #                   -> Description
    #       ]
    #       -> Total
    #       -> Status

    # Sets the Order Saves dictionary with the key that is generated by Firebase
    theOrder = db.child("Orders").push(listToDict(order.items))

    # Saves the actual key of the Order
    orderNum = theOrder.get("name")

    db.child("Orders").child(orderNum).child("Total").set(order.total)
    db.child("Orders").child(orderNum).child("Status").set(order.status)

    return orderNum

# -----------------------READ-----------------------

# -----------------------UPDATE-----------------------

# -----------------------DELETE-----------------------
